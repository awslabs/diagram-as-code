on:
  push:
    tags:
    - 'v*'

name: Create release from tag

jobs:
  build:
    strategy:
      matrix:
        os: ['linux', 'darwin', 'windows']
        arch: ['amd64', '386', 'arm', 'arm64']
        exclude:
          - os: 'darwin'
            arch: '386'
          - os: 'darwin'
            arch: 'arm'
          - os: 'windows'
            arch: 'arm'
          - os: 'windows'
            arch: 'arm64'
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container: golang:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y zip

      - name: Build
        run: |
          name="awsdac-${GITHUB_REF##*/}_${{ matrix.os }}-${{ matrix.arch }}"
          mkdir -p "dist/${name}"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -buildvcs=false -ldflags="-w -X main.version=${GITHUB_REF##*/}" -o "dist/${name}" ./cmd/awsdac
          cp LICENSE README.md "dist/${name}"
          zip -9 -r "dist/${name}.zip" "dist/${name}"

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist/*.zip

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist

      - run: |
          set -x
          (echo "${GITHUB_REF##*/}"; echo; git cherry -v "$(git describe --abbrev=0 HEAD^)" | cut -d" " -f3-) > CHANGELOG
          assets=()
          for zip in ./dist/*.zip; do
            assets+=("$zip")
          done
          gh release create --generate-notes --latest "${GITHUB_REF##*/}" "${assets[@]}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
