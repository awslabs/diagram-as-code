name: Go Format Check

permissions:
  contents: read

on:
  push:
    branches: [ '**' ]
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/fmt-check.yml'
  pull_request:
    branches: [ '**' ]
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

jobs:
  format-check:
    name: Check Go Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Install errcheck
        run: go install github.com/kisielk/errcheck@latest

      - name: Check go fmt
        run: |
          gofmt -l -d . | tee fmt-output.txt
          if [ -s fmt-output.txt ]; then
            echo "Go files need formatting. Run 'go fmt ./...' locally and commit the changes."
            exit 1
          fi

      - name: Check goimports
        run: |
          goimports -l -d . | tee imports-output.txt
          if [ -s imports-output.txt ]; then
            echo "Go files need import formatting. Run 'goimports -w .' locally and commit the changes."
            exit 1
          fi

      - name: Check errcheck
        run: |
          errcheck ./... | tee errcheck-output.txt
          if [ -s errcheck-output.txt ]; then
            echo "Go files have unchecked errors. Fix the errors and commit the changes."
            exit 1
          fi

      - name: Check map access safety
        run: |
          cd tools/mapcheck && go build -o mapcheck . && cd ../..
          ./tools/mapcheck/mapcheck ./... 2>&1 | tee mapcheck-output.txt
          if [ -s mapcheck-output.txt ]; then
            echo "Unsafe map access patterns detected. Use comma-ok idiom 'value, ok := map[key]' for safe map access."
            exit 1
          fi
