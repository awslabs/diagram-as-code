name: Get AWS Icons

permissions:
  contents: write

on:
  push:
    branches: [ "**" ]
    paths:
      - '.github/workflows/get-aws-icons.yml'
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday
  workflow_dispatch:

jobs:
  get-icons:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Checkout wiki
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository }}.wiki"
          path: .wiki

      - name: Get AWS Asset Package and extract to wiki
        run: |
          ASSET_URL=$(curl -s "https://aws.amazon.com/jp/architecture/icons/" | \
            sed -n '/<script type="application\/json">/,/<\/script>/p' | \
            grep -o 'https://[^"]*Asset-Package[^"]*\.zip')
          
          FILENAME=$(basename "$ASSET_URL" .zip)
          
          # Download and extract ZIP
          curl -L "$ASSET_URL" -o asset-package.zip
          unzip -o -q asset-package.zip -d .wiki/
          
          # Create main index markdown file
          mkdir -p ".wiki/AssetPackage/${FILENAME}"
          cat > ".wiki/AssetPackage/${FILENAME}.md" << 'EOF'
          # AWS Asset Package
          
          ## Download Link
          EOF
          echo "[$FILENAME]($ASSET_URL)" >> ".wiki/AssetPackage/${FILENAME}.md"
          cat >> ".wiki/AssetPackage/${FILENAME}.md" << 'EOF'
          
          ## Updated
          EOF
          echo "$(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> ".wiki/AssetPackage/${FILENAME}.md"
          cat >> ".wiki/AssetPackage/${FILENAME}.md" << 'EOF'
          
          ## Categories
          
          ### Architecture Service Icons
          EOF
          find .wiki -name "Architecture-Service-Icons*" -type d | while read dir; do
            category=$(basename "$dir")
            echo "- [$category]($FILENAME/Architecture-Service-Icons/$category)" >> ".wiki/AssetPackage/${FILENAME}.md"
          done
          
          cat >> ".wiki/AssetPackage/${FILENAME}.md" << 'EOF'
          
          ### Resource Icons
          EOF
          find .wiki/Resource-Icons* -name "Res_*" -type d | sort | while read dir; do
            category=$(basename "$dir")
            display_name=$(echo "$category" | sed 's/Res_//g' | sed 's/-/ /g')
            echo "- [$display_name]($FILENAME/Resource-Icons/$category)" >> ".wiki/AssetPackage/${FILENAME}.md"
          done
          
          cat >> ".wiki/AssetPackage/${FILENAME}.md" << 'EOF'
          
          ### Architecture Group Icons
          EOF
          find .wiki -name "Architecture-Group-Icons*" -type d | while read dir; do
            category=$(basename "$dir")
            echo "- [$category]($FILENAME/Architecture-Group-Icons/$category)" >> ".wiki/AssetPackage/${FILENAME}.md"
          done
          
          # Generate category-specific pages for Resource Icons
          mkdir -p ".wiki/AssetPackage/${FILENAME}/Resource-Icons"
          find .wiki/Resource-Icons* -name "Res_*" -type d | sort | while read dir; do
            category=$(basename "$dir")
            display_name=$(echo "$category" | sed 's/Res_//g' | sed 's/-/ /g')
            
            cat > ".wiki/AssetPackage/${FILENAME}/Resource-Icons/${category}.md" << EOF
          # Resource Icons: $display_name
          
          [← Back to Asset Package](../../${FILENAME})
          
          | Image | Path |
          |-------|------|
          EOF
            
            find "$dir" -name "*.png" -o -name "*.svg" | grep -v __MACOSX | sort | while read file; do
              rel_path=${file#.wiki/}
              raw_url="https://raw.githubusercontent.com/wiki/ugwis/diagram-as-code/$rel_path"
              echo "| ![$(basename "$file")]($raw_url) | \`$rel_path\` |" >> ".wiki/AssetPackage/${FILENAME}/Resource-Icons/${category}.md"
            done
          done
          
          # Generate category-specific pages for Architecture Service Icons
          mkdir -p ".wiki/AssetPackage/${FILENAME}/Architecture-Service-Icons"
          find .wiki -name "Architecture-Service-Icons*" -type d | while read dir; do
            category=$(basename "$dir")
            
            cat > ".wiki/AssetPackage/${FILENAME}/Architecture-Service-Icons/${category}.md" << EOF
          # Architecture Service Icons: $category
          
          [← Back to Asset Package](../../${FILENAME})
          
          | Image | Path |
          |-------|------|
          EOF
            
            find "$dir" -name "*.png" -o -name "*.svg" | grep -v __MACOSX | sort | while read file; do
              rel_path=${file#.wiki/}
              raw_url="https://raw.githubusercontent.com/wiki/ugwis/diagram-as-code/$rel_path"
              echo "| ![$(basename "$file")]($raw_url) | \`$rel_path\` |" >> ".wiki/AssetPackage/${FILENAME}/Architecture-Service-Icons/${category}.md"
            done
          done
          
          # Generate category-specific pages for Architecture Group Icons
          mkdir -p ".wiki/AssetPackage/${FILENAME}/Architecture-Group-Icons"
          find .wiki -name "Architecture-Group-Icons*" -type d | while read dir; do
            category=$(basename "$dir")
            
            cat > ".wiki/AssetPackage/${FILENAME}/Architecture-Group-Icons/${category}.md" << EOF
          # Architecture Group Icons: $category
          
          [← Back to Asset Package](../../${FILENAME})
          
          | Image | Path |
          |-------|------|
          EOF
            
            find "$dir" -name "*.png" -o -name "*.svg" | grep -v __MACOSX | sort | while read file; do
              rel_path=${file#.wiki/}
              raw_url="https://raw.githubusercontent.com/wiki/ugwis/diagram-as-code/$rel_path"
              echo "| ![$(basename "$file")]($raw_url) | \`$rel_path\` |" >> ".wiki/AssetPackage/${FILENAME}/Architecture-Group-Icons/${category}.md"
            done
          done

      - name: Staging the changes
        working-directory: .wiki
        id: staging
        run: |
          git add .
          echo "CHANGES=$(git diff --staged --name-only | wc -l)" >> $GITHUB_OUTPUT

      - name: Publish wiki
        working-directory: .wiki
        if: steps.staging.outputs.CHANGES > 0
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Update AWS Asset Package with extracted contents [$(date -u +"%Y-%m-%d")]"
          git push
